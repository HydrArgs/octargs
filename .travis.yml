language: cpp

os:
  - linux

dist:
  - bionic

compiler:
  - gcc
  - clang

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "iM6IP3NULytwcnb4oLbBW7eJfykKs5NOYAjtOZQRjuIYp3RT/RShX+AWeilGmAZFiyWbgOXI0zY2AZ6VpTLncQaj/p0FhOeoWS2Y+di9/HU4/cYWPg8whukq6Kv6wlV33079RI/8XPvh/ukDld6MM6LTjfPbR0YT8Eag5kNb6LXOvYZOG7NL3qZdj/TBN1PXW4Dd712oEUFarGrYOG7ICJW/z90lF/SHzZ+KveN1OHu0tI2Uo8vGU/phLEKP+vGtPn5Pa5XJ6/bkkK0wY53aYjnU11lAi0cNrOutpwUFWxFBY4z0YgZa0WyB/eJlt49XnSJv3w9k4e0YZtF2KvISLzqWHc5SefOTNTlZoiX5cz2w3nhxQ5KI2dKrel3zi5hit0W+Bo5uJH9NnVr/Hw9t7TcHz0QxV9hW6OGN/5ScZSJZcGSqiTrW5v05qeW1NJHKPAc4Tg/PuoA7k75JLf9Jz25QcbGepAbIziP4toJmnUTKlOPdS+twMA1IFW4DIOPspiN2oLNbMjZPP7sDOeNVWB/9+MtxpoGgkfNNxu6Prl0eKHdkZLudkyRbh3Mnv2ndy/ec48P7rlb9bzYRmAEnPh+IRYl+79xNgUF5KCu36iO23pPYC/Z0yVYooSZtYAdnYegeKN2cCT4Iw+6c33xb4ZXJ8vaOPEihSwzTfngU7a8="

addons:
  coverity_scan:
    project:
      name: "saveman/octargs"
      description: "C++ command line argument parsing library"
    notification_email: k.kapuscik@gmail.com
    build_command_prepend: "/usr/bin/cmake -DCMAKE_BUILD_TYPE=Release ."
    build_command: "/usr/bin/cmake --build ."
    branch_pattern: coverity_scan

before_install:
  # For Coverity
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  # Repository for new CMake
  - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
  - sudo apt-add-repository "deb https://apt.kitware.com/ubuntu/ bionic main"
  - sudo apt-get -y update
  # Install
  # - New CMake
  # - CppUnit library
  # - Coverage tools: GCOVR
  - sudo apt-get -y install cmake libcppunit-dev gcovr

before_script:
  # Make sure everything is clean
  - rm -rf build
  - rm -rf install
  # Create build directories
  - mkdir -p build/debug
  - mkdir -p build/release
  # Prepare build environment (cmake)
  - /usr/bin/cmake --version
  - pushd build/debug
  - /usr/bin/cmake -DCMAKE_INSTALL_PREFIX:PATH=$(pwd)/../../install/debug -DCMAKE_BUILD_TYPE=Debug ..
  - popd
  - pushd build/release
  - /usr/bin/cmake -DCMAKE_INSTALL_PREFIX:PATH=$(pwd)/../../install/release -DCMAKE_BUILD_TYPE=Release ..
  - popd

script:
  - pushd build/debug
  - /usr/bin/cmake --build .
  - /usr/bin/cmake --build . -- install
  - /usr/bin/cmake --build . -- test
  - popd
  - pushd build/release
  - /usr/bin/cmake --build .
  - /usr/bin/cmake --build . -- install
  - /usr/bin/cmake --build . -- test
  - popd
